@page "/fetchdata"
@using BotMaster.RightsManagement;
@using BotMaster.Web.AdministrationUi.Data
@inject WeatherForecastService ForecastService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null || userConnections is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Id</td>
                    <td>@forecast.UserName</td>
                </tr>
            }
        </tbody>
    </table>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Conncted</th>
                <th>ConnectionCode</th>
                <th>ValidUntil</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in userConnections)
            {
                <tr>
                    <td>@forecast.Id</td>
                    <td>@forecast.Connected</td>
                    <td>@forecast.ConnectionCode</td>
                    <td>@forecast.ValidUntil</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private UserConnection[]? userConnections;

    protected override async Task OnInitializedAsync()
    {
        forecasts = ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
        userConnections= ForecastService.GetConnections();
    }
}
